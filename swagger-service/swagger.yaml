swagger: '2.0'
info:
  version: 1.0.0
  title: Swagger API Doc
  contact:
    email: chameera.lakshitha212@gmail.com
host: 18.223.116.151:8000
basePath: /
tags:
  - name: Customer Service
    description: Operations related to customer service
  - name: Note Service
    description: Operations related to note service

schemes:
  - http
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  '/customer':
    post:
      tags:
        - Customer Service
      summary: Create customer
      description: Creating a new customer account
      operationId: createCustomer
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              firstName:
                type: string
                required: true
                description: First name must be longer than 2 characters.
              lastName:
                type: string
              email:
                type: string
                required: true
                description: Unique email
              password:
                type: string
                required: true
                description: Password must be longer than 3 characters.
              contactNumber:
                type: string                
              isActive:
                type: boolean
            example:
              firstName: Dummy
              lastName: Dummy
              email: dummy@gmail.com 
              password: dummy
              contactNumber: "123456789"
              isActive: true
      responses:
        '201':
          description: successful operation
          schema:
            type: object
            properties:
              customer:
                type: object
                properties:
                  id:
                    type: string
                    description: Unique key
                  firstName:
                    type: string
                  lastName:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                  contactNumber:
                    type: string
                  isActive:
                    type: boolean
                  createdAt:
                    type: number
        '400':
          description: bad request
          schema:
            type: object
            properties:
              error:
                type: string
        '404':
          description: not found
          schema:
            type: object
            properties:
              error:
                type: string
        '500':
          description: internal server error
          schema:
            type: object
            properties:
              error:
                type: string
  '/customer/login':
      post:
        tags:
          - Customer Service
        summary: Customer login
        description: Logs customer into the system
        operationId: customerLogin
        produces:
          - application/json
        parameters:
          - in: body
            name: body
            schema:
              type: object
              properties:
                loginInfo:
                  type: object
                  properties:
                    email:
                      type: string
                      required: true
                      description: Unique email
                    password:
                      type: string
                      required: true
                      description: Password must be longer than 3 characters.
              example:
                email: dummy@gmail.com 
                password: dummy
        responses:
          '201':
            description: successful operation
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    id:
                      type: string
                      description: Unique key
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    contactNumber:
                      type: string
                    isActive:
                      type: boolean
                    createdAt:
                      type: number
                token:
                  type: string
          '400':
            description: bad request
            schema:
              type: object
              properties:
                error:
                  type: string
          '404':
            description: not found
            schema:
              type: object
              properties:
                error:
                  type: string
          '500':
            description: internal server error
            schema:
              type: object
              properties:
                error:
                  type: string
  '/customers':
      get:
        security:
          - Bearer: []
        tags:
          - Customer Service
        summary: Customer List
        description: Get customer list
        operationId: customerList
        produces:
          - application/json
        responses:
          '201':
            description: successful operation
            schema:
              type: object
              properties:
                customerList:
                  type: array
                  items:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Unique key
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      contactNumber:
                        type: string
                      isActive:
                        type: boolean
                      password:
                        type: string
                      createdAt:
                        type: number
          '400':
            description: bad request
            schema:
              type: object
              properties:
                error:
                  type: string
          '404':
            description: not found
            schema:
              type: object
              properties:
                error:
                  type: string
          '500':
            description: internal server error
            schema:
              type: object
              properties:
                error:
                  type: string
  '/customer/{customerId}':
      get:
        security:
          - Bearer: []
        tags:
          - Customer Service
        summary: Single customer
        description: Get single customer
        operationId: singleCustomer
        produces:
          - application/json
        parameters:
          - in: path
            name: customerId
            description: ID of customer to return
            required: true
            type: string
        responses:
          '201':
            description: successful operation
            schema:
              type: object
              properties:
                customer:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Unique key
                    firstName:
                      type: string
                    lastName:
                      type: string
                    email:
                      type: string
                    contactNumber:
                      type: string
                    isActive:
                      type: boolean
                    password:
                      type: string
                    createdAt:
                      type: number
          '400':
            description: bad request
            schema:
              type: object
              properties:
                error:
                  type: string
          '404':
            description: not found
            schema:
              type: object
              properties:
                error:
                  type: string
          '500':
            description: internal server error
            schema:
              type: object
              properties:
                error:
                  type: string

definitions:
  Customer:
    type: object
    properties:
      id:
        type: string
        description: Auto generated unique key
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
        description: Unique email
      password:
        type: string
      contactNumber:
        type: string
      isActive:
        type: boolean
    xml:
      name: Customer
  Note:
    type: object
    properties:
      id:
        type: string
        description: Auto generated unique key
      title:
        type: string
      description:
        type: string
      customerId:
        type: string
      isActive:
        type: boolean
    xml:
      name: Note
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
